name: Add Users & Track Changes-Timestamp

on:
  push:
    paths:
      - ".github/data/access-list.json" # Runs only when the JSON file is updated
  workflow_dispatch: # Allows manual trigger

jobs:
  track-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Fetch the previous commit to compare changes

      - name: Get Previous JSON Version
        id: previous-json
        run: |
          git show HEAD~1:.github/data/access-list.json > old_access_list.json || echo '{}' > old_access_list.json

      - name: Read Users from Current JSON
        id: read-json
        run: echo "USERS_JSON=$(cat .github/data/access-list.json | jq -c)" >> $GITHUB_ENV

      - name: Track Changes in Access List
        id: track-changes
        run: |
          TIMESTAMP=$(TZ='America/Detroit' date '+%Y-%m-%d %H:%M:%S')
          NEW_USERS=""
          CHANGED_ACCESS=""

          # Compare old and new JSON
          for user in $(jq -r '.users[].username' .github/data/access-list.json); do
            OLD_ACCESS=$(jq -r --arg user "$user" '.users[] | select(.username == $user) | .repositories[] | "\(.repo):\(.permission)"' old_access_list.json)
            NEW_ACCESS=$(jq -r --arg user "$user" '.users[] | select(.username == $user) | .repositories[] | "\(.repo):\(.permission)"' .github/data/access-list.json)

            if [[ -z "$OLD_ACCESS" ]]; then
              NEW_USERS+="$TIMESTAMP - $user\n"
            elif [[ "$OLD_ACCESS" != "$NEW_ACCESS" ]]; then
              CHANGED_ACCESS+="$TIMESTAMP - User: $user\nOld Access:\n$OLD_ACCESS\nNew Access:\n$NEW_ACCESS\n---\n"
            fi
          done

          if [[ -n "$NEW_USERS" ]]; then
            echo -e "üîπ **New Users Added:**\n$NEW_USERS" >> logs/access-log.txt
          fi
          if [[ -n "$CHANGED_ACCESS" ]]; then
            echo -e "üîπ **Changed Access Levels:**\n$CHANGED_ACCESS" >> logs/access-log.txt
          fi

          echo "New Users: $NEW_USERS"
          echo "Changed Access: $CHANGED_ACCESS"

      - name: Commit Log Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          if [[ -n $(git status --porcelain logs/access-log.txt) ]]; then
            git add logs/access-log.txt
            git commit -m "üîπ Updated access logs"
            git push
          else
            echo "No changes to commit."
          fi
        continue-on-error: true

      - name: Add Users to Repositories
        uses: actions/github-script@v6
        with:
          script: |
            const owner = "JatinDTE";
            const users = JSON.parse(process.env.USERS_JSON).users;

            for (const user of users) {
              for (const repoInfo of user.repositories) {
                try {
                  await github.rest.repos.addCollaborator({
                    owner: owner,
                    repo: repoInfo.repo,
                    username: user.username,
                    permission: repoInfo.permission,
                  });
                  console.log(`‚úÖ Added ${user.username} to ${repoInfo.repo} with ${repoInfo.permission} access.`);
                } catch (error) {
                  console.error(`‚ùå Failed to add ${user.username} to ${repoInfo.repo}: ${error.message}`);
                }
              }
            }
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
